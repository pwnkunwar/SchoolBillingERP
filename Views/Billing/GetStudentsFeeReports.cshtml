@model List<StudentFeeDetailsViewModel>

@{
    ViewData["Title"] = "Student Fees Report";
    Layout = "~/Views/Shared/_Admin.cshtml";

    var distinctMonths = Model.SelectMany(m => m.StudentFees)
                              .Where(f => !string.IsNullOrWhiteSpace(f.Month))
                              .Select(f => f.Month)
                              .Distinct()
                              .OrderBy(m => m)
                              .ToList();

    var feeTypes = Model.SelectMany(m => m.StudentFees)
                        .Select(f => f.FeeType)
                        .Where(ft => ft != null)
                        .Distinct()
                        .ToList();

    var monthFeeTypes = feeTypes.Where(ft =>
        Model.Any(m => m.StudentFees.Any(f => f.FeeType == ft && !string.IsNullOrWhiteSpace(f.Month)))
    ).ToList();

    var nonMonthFeeTypes = feeTypes.Except(monthFeeTypes).ToList();
}

<style>
    .page-content {
        background-color: #f0f8ff;
        padding: 20px;
    }

    th {
        text-align: center;
        background-color: #092655 !important;
        color: white !important;
        vertical-align: middle;
    }

    td {
        text-align: center;
        vertical-align: middle;
    }

    .highlight-green {
        background-color: #d4edda;
    }

    .highlight-red {
        background-color: #f8d7da;
    }
</style>

<div class="page-content">
    <div class="well clearfix">
        <div class="row mb-3">
            <div class="col-md-3">
                <input type="text" placeholder="Search..." class="form-control Search">
            </div>

            <div class="col-md-2" style="margin-left:940px">
                <button class="btn btn-primary" id="btnExport" style="background-color: #092 !important;">
                    <i class="bi bi-file-excel"></i> Export to Excel
                </button>
            </div>
        </div>

        <div class="table-responsive" style="max-height: 75vh; overflow-y: auto;">
            <table class="table table-bordered table-striped table-hover" id="studentsBillingReports">
                <thead>
                    <tr>
                        <th colspan="4">Student Info</th>
                        <th colspan="@(distinctMonths.Count + nonMonthFeeTypes.Count)">Payments Info</th>
                        <th rowspan="3" class="totalpaid">Total Paid</th>
                    </tr>
                    <tr>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th colspan="@distinctMonths.Count">Monthly Fee</th>
                        <th colspan="@nonMonthFeeTypes.Count">Other Fee</th>
                    </tr>
                    <tr>
                        <th>Sno</th>
                        <th>Student Name</th>
                        <th>Class</th>
                        <th>Address</th>
                        @foreach (var month in distinctMonths)
                        {
                            <th>@month</th>
                        }
                        @foreach (var feeType in nonMonthFeeTypes)
                        {
                            <th>@feeType.Name</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @{
                        int sn = 1;
                        var reversedStudents = Model.OrderByDescending(c => c.FullName).ToList();
                    }
                    @foreach (var student in reversedStudents)
                    {
                        decimal totalPaid = student.StudentFees.Sum(f => f.Amount);
                        <tr>
                            <td>@sn</td>
                            <td>@student.FullName</td>
                            <td>@student.ClassName</td>
                            <td>@student.Address</td>

                            @foreach (var month in distinctMonths)
                            {
                                var fee = student.StudentFees.FirstOrDefault(f => f.Month == month);
                                <td>@($"Rs. {(fee?.Amount ?? 0):N2}")</td>
                            }

                            @foreach (var feeType in nonMonthFeeTypes)
                            {
                                var fee = student.StudentFees.FirstOrDefault(f => f.FeeType.Name == feeType.Name);
                                <td>@($"Rs. {(fee?.Amount ?? 0):N2}")</td>
                            }

                            <td class="paid">@($"Rs. {totalPaid:N2}")</td>
                        </tr>
                        sn++;
                    }
                </tbody>
                <tfoot>
                    <tr id="total-row-all" style="font-weight: bold; background: #d9edf7;">
                        <td colspan="@(4 + distinctMonths.Count + nonMonthFeeTypes.Count)">Total (All)</td>
                        <td class="sum-paid"></td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateTotalRow() {
            let totalPaid = 0;
            $("#studentsBillingReports tbody tr:visible").each(function () {
                let paidText = $(this).find(".paid").text().replace(/Rs\.|,/g, '').trim();
                totalPaid += parseFloat(paidText) || 0;
            });

            $(".sum-paid").text(`Rs. ${totalPaid.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`);
        }

        $(document).ready(function () {
            $(".Search").on("keyup", function () {
                const term = $(this).val().toLowerCase();
                $("#studentsBillingReports tbody tr").each(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(term) > -1);
                });
                updateTotalRow();
            });

            updateTotalRow();
        });

        $("#btnExport").off("click").on("click", function () {
            const Table = document.getElementById("studentsBillingReports");
            const profile = `StudentsBilling Reports`;
            const parameter = `$("#clientSelect option:selected").text()`;
            fnExcelParmReport(Table, profile, parameter);
        });
    </script>
}
